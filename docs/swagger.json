{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-final.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Contacts operations"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getAllContacts",
        "description": "Get list of all contacts with pagination and filtering",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "personal",
                      "home",
                      "work"
                    ],
                    "description": "Filter by contact type"
                  },
                  "isFavorite": {
                    "type": "boolean",
                    "description": "Filter by favorite contacts"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "default": 5
            },
            "description": "Number of items per page."
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "default": "name"
            },
            "description": "All contact fields can be mentioned."
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found Contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1,
                          "description": "Current page number"
                        },
                        "perPage": {
                          "type": "number",
                          "example": 5,
                          "description": "Number of items per page"
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 20,
                          "description": "Total number of items"
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4,
                          "description": "Total number of pages"
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true,
                          "description": "Is there a next page"
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false,
                          "description": "Is there a previous page"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "description": "Contact name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Contact phone number",
                    "type": "string",
                    "example": "380961234567"
                  },
                  "email": {
                    "description": "Contact email",
                    "type": "string",
                    "example": "johndoe@email.com"
                  },
                  "isFavorite": {
                    "description": "Contact is favorite",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Contact type",
                    "type": "string",
                    "enum": [
                      "personal",
                      "home",
                      "work"
                    ],
                    "example": "home"
                  },
                  "photo": {
                    "description": "Contact photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a student",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a student!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact",
        "operationId": "getContactById",
        "description": "Get one contact by its unique ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "Unique ID of contact",
            "schema": {
              "type": "string",
              "example": "5f64a2b4d6f3b4b4b4b4b4b4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact",
        "operationId": "updateContact",
        "description": "Update one contact by its unique ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "Unique ID of contact",
            "schema": {
              "type": "string",
              "example": "5f64a2b4d6f3b4b4b4b4b4b4"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the contact",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Email of the contact",
                    "type": "string",
                    "example": "johndoe@email.com"
                  },
                  "phoneNumber": {
                    "description": "Phone number of the contact",
                    "type": "string",
                    "example": "380961234567"
                  },
                  "isFavorite": {
                    "description": "Is contact favorite",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Type of the contact",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "photo": {
                    "description": "Photo of the contact",
                    "type": "string",
                    "format": "binary",
                    "example": "https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact updated"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Delete one contact by its unique ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "Unique ID of contact",
            "schema": {
              "type": "string",
              "example": "5f64a2b4d6f3b4b4b4b4b4b4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully delete a contact!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a user with payload",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "johndoe@email.com"
                  },
                  "password": {
                    "description": "User password",
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": "6776df324aec4cfcfb5e822d"
                            },
                            "name": {
                              "type": "string",
                              "example": "John Doe"
                            },
                            "email": {
                              "type": "string",
                              "example": "johndoe@email.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a user with email and password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "johndoe@email.com"
                  },
                  "password": {
                    "description": "User password",
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "6gfVTS3xvuaKbSHfSxJiOtaBdF0eLtPmkoWo2EDa"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId"
                ],
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "example": "67780c59543a1babf75a2da3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully log out an user!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refresh a user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId",
                  "refreshToken"
                ],
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "example": "67780c59543a1babf75a2da3"
                  },
                  "refreshToken": {
                    "type": "string",
                    "example": "2OVgU5N3WO6U2Hmft+CDjY9OavK49v8jqv28EVR0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh user session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "6gfVTS3xvuaKbSHfSxJiOtaBdF0eLtPmkoWo2EDa"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset email",
        "operationId": "sendResetEmail",
        "description": "Send reset password link to user email",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "johndoe@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Send reset password email to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset users password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiI.eyJzE1ZDlmtobjU5MTd9.G8cc88_uZA89Mp1Dy-g6Sdz1wse1Ic_yrAFt_5_Mgm"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset users password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "isFavorite",
          "contactType",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Unique ID of contact",
            "type": "string",
            "example": "5f64a2b4d6f3b4b4b4b4b4b4"
          },
          "name": {
            "description": "Name of contact",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "Email of contact",
            "type": "string",
            "example": "johndoe@email.com"
          },
          "phoneNumber": {
            "description": "Phone number of contact",
            "type": "string",
            "example": 380501234567
          },
          "isFavorite": {
            "description": "Is contact favorite",
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "description": "Type of contact",
            "type": "string",
            "example": "personal",
            "enum": [
              "work",
              "personal",
              "home"
            ]
          },
          "userId": {
            "description": "Unique ID of user who create contact",
            "type": "string",
            "example": "5f64a2b4d6f3b4b4b4b4b4b4"
          },
          "photo": {
            "description": "Photo of contact",
            "type": "string",
            "example": "https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "Forbidden: You do not have access to this resource"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found contact error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not Found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "User with this email already exists"
                }
              }
            }
          }
        }
      }
    }
  }
}